[{"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\Portfolio projects\\nowchat\\src\\index.js":"1","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\Portfolio projects\\nowchat\\src\\App.js":"2","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\Portfolio projects\\nowchat\\src\\reportWebVitals.js":"3","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\Portfolio projects\\nowchat\\src\\StateProvider.js":"4","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\Portfolio projects\\nowchat\\src\\reducer.js":"5","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\Portfolio projects\\nowchat\\src\\Chat.js":"6","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\Portfolio projects\\nowchat\\src\\Sidebar.js":"7","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\Portfolio projects\\nowchat\\src\\SidebarChat.js":"8","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\Portfolio projects\\nowchat\\src\\Message.js":"9","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\Portfolio projects\\nowchat\\src\\firebase.js":"10","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\Portfolio projects\\nowchat\\src\\Login.js":"11"},{"size":689,"mtime":1612255170514,"results":"12","hashOfConfig":"13"},{"size":783,"mtime":1612261743003,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":399,"mtime":1612255242312,"results":"16","hashOfConfig":"13"},{"size":369,"mtime":1612266341513,"results":"17","hashOfConfig":"13"},{"size":5277,"mtime":1612270583203,"results":"18","hashOfConfig":"13"},{"size":1342,"mtime":1612254022745,"results":"19","hashOfConfig":"13"},{"size":719,"mtime":1612266497118,"results":"20","hashOfConfig":"13"},{"size":1067,"mtime":1612268136285,"results":"21","hashOfConfig":"13"},{"size":639,"mtime":1612250825261,"results":"22","hashOfConfig":"13"},{"size":784,"mtime":1612261227557,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"26wsyj",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\Portfolio projects\\nowchat\\src\\index.js",[],["52","53"],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\Portfolio projects\\nowchat\\src\\App.js",["54"],"import React from 'react';\nimport './App.css';\nimport useStateValue from \"./StateProvider\";\nimport Login from \"./Login\";\nimport Chat from \"./Chat\";\nimport Sidebar from \"./Sidebar\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nconst App = () => {\n\n  const [{user}, dispatch] = useStateValue();\n\n  return (\n    <div className=\"app\">\n      {!user ? (\n        <Login />\n      ) : (\n        <>\n          <BrowserRouter>\n            <Sidebar />\n            <Switch>\n              <Route path=\"/channels/:channelId\">\n                <Chat />\n              </Route>\n              <Route path=\"/\">\n                <Chat />\n              </Route>\n            </Switch>\n          </BrowserRouter>        \n        </>\n      )}\n      \n    </div>\n  );\n}\n\nexport default App;\n\n","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\Portfolio projects\\nowchat\\src\\reportWebVitals.js",[],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\Portfolio projects\\nowchat\\src\\StateProvider.js",[],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\Portfolio projects\\nowchat\\src\\reducer.js",[],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\Portfolio projects\\nowchat\\src\\Chat.js",["55"],"import { Avatar } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport \"./Chat.css\";\r\nimport Message from './Message';\r\nimport db from \"./firebase\";\r\nimport useStateValue from './StateProvider';\r\nimport { useParams } from 'react-router-dom';\r\nimport firebase from \"firebase\"\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\n\r\nconst Chat = () => {\r\n\r\n    const [{user}, dispatch] = useStateValue();\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [avatarSeed, setAvatarSeed] = useState(\"\");\r\n    const [channelName, setChannelName] = useState(\"\");\r\n    const {channelId} = useParams();\r\n    const [imageUrl, setImageUrl] = useState(\"\");\r\n\r\n    const togglePhotoInput = () => {\r\n        const photoInput = document.querySelector(\".photoInput\");\r\n        photoInput.classList.toggle(\"openPhotoInput\");\r\n    }\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        setMessage(\"\");\r\n        setImageUrl(\"\");\r\n        if(message === \"\" && imageUrl === \"\"){\r\n            return;\r\n        }else if(message !== \"\"){\r\n            db.collection(\"channels\").doc(channelId).collection(\"messages\").add({\r\n                name: user?.displayName,\r\n                photo: user?.photoURL,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                message: message,\r\n            })\r\n        }else if(message === \"\" && imageUrl !== \"\"){\r\n            const photoInput = document.querySelector(\".photoInput\");\r\n            photoInput.classList.toggle(\"openPhotoInput\");\r\n            db.collection(\"channels\").doc(channelId).collection(\"messages\").add({\r\n                name: user?.displayName,\r\n                photo: user?.photoURL,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                image: imageUrl,\r\n            })\r\n        }else if(message !== \"\" && imageUrl !== \"\"){\r\n            const photoInput = document.querySelector(\".photoInput\");\r\n            photoInput.classList.toggle(\"openPhotoInput\");\r\n            db.collection(\"channels\").doc(channelId).collection(\"messages\").add({\r\n                name: user?.displayName,\r\n                photo: user?.photoURL,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                image: imageUrl,\r\n                message: message,\r\n            })\r\n        }else if(message !== \"\" && imageUrl === \"\"){\r\n            db.collection(\"channels\").doc(channelId).collection(\"messages\").add({\r\n                name: user?.displayName,\r\n                photo: user?.photoURL,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                message: message,\r\n            })\r\n        }        \r\n    }\r\n\r\n    useEffect(() => {\r\n        setAvatarSeed(Math.floor(Math.random() * 5000));\r\n        if(channelId){\r\n            db.collection(\"channels\").doc(channelId).onSnapshot((snapshot) => (\r\n                setChannelName(snapshot.data().channelName)\r\n            ));\r\n            db.collection(\"channels\").doc(channelId).collection(\"messages\").orderBy(\"timestamp\", \"asc\").onSnapshot((snapshot) => (\r\n                setMessages(snapshot.docs.map((doc) => doc.data()))\r\n            ))\r\n        }\r\n    }, [channelId]);\r\n\r\n    const signOut = () => {\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chatHeader\">\r\n                <div className=\"chatHeaderInfo\">\r\n                    <Avatar className=\"sidebarChatAvatar\" src={`https://avatars.dicebear.com/api/identicon/${avatarSeed}.svg`} />\r\n                    <p>{channelName}</p>\r\n                </div>\r\n                <div className=\"chatHeaderInfo\">\r\n                    <Avatar src={user?.photoURL} />\r\n                    <div className=\"userInfo\">\r\n                        <h2>{user?.displayName}</h2>\r\n                        <small>{user?.email}</small>\r\n                    </div>\r\n                </div>\r\n                <div onClick={signOut} className=\"sign-out-container\">\r\n                    <ExitToAppIcon />\r\n                    <p>Log Out</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"chatBody\">\r\n                {messages.map((message) => (\r\n                    <Message key={message.id} id={message.id} messageName={message.name} messageImage={message.image} messageText={message.message} messageTimestamp={message.timestamp} messagePhoto={message.photo} />\r\n                ))}\r\n            </div>\r\n            <div className=\"chatFooter\">\r\n                <form>\r\n                    <input type=\"text\" value={message} onChange={(e) => setMessage(e.target.value)} placeholder={`Message as ${user.displayName}`}/>\r\n                    <AttachFileIcon onClick={togglePhotoInput} classname=\"addPhotoUrl\" />\r\n                    <input className=\"photoInput\" type=\"text\" value={imageUrl} placeholder=\"Photo URL\" onChange={(e) => setImageUrl(e.target.value)} />\r\n                    <button type=\"submit\" onClick={sendMessage}>Send</button>\r\n                </form>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;\r\n","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\Portfolio projects\\nowchat\\src\\Sidebar.js",["56"],"import React, { useEffect, useState } from 'react';\r\nimport \"./Sidebar.css\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SidebarChat from \"./SidebarChat\";\r\nimport db from \"./firebase\";\r\nimport { Room } from '@material-ui/icons';\r\n\r\nconst Sidebar = () => {\r\n\r\n    const [channels, setChannels] = useState([]);\r\n\r\n    useEffect(() => {\r\n        db.collection(\"channels\").onSnapshot((snapshot) => (\r\n            setChannels(snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                data: doc.data(),\r\n            })))\r\n        ));\r\n    }, []);\r\n\r\n    const createChannel = () => {\r\n        const channelName = prompt(\"Enter a name for a channel\");\r\n        if(channelName){\r\n            db.collection(\"channels\").add({\r\n                channelName: channelName,\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar-header\">\r\n                <h2>NowChat</h2>\r\n                <AddIcon onClick={createChannel} classname=\"addChatButton\" />\r\n            </div>\r\n            <div className=\"sidebar-chats\">\r\n                {channels.map((channel) => (\r\n                    <SidebarChat key={channel.id} id={channel.id} name={channel.data.channelName} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\Portfolio projects\\nowchat\\src\\SidebarChat.js",[],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\Portfolio projects\\nowchat\\src\\Message.js",["57"],"import { Avatar } from '@material-ui/core';\r\nimport React from 'react';\r\nimport \"./Chat.css\";\r\nimport \"./Message.css\";\r\nimport useStateValue from './StateProvider';\r\nimport * as timeago from 'timeago.js';\r\n\r\nconst Message = ({messageName, messageText, messageTimestamp, messagePhoto, messageImage}) => {\r\n\r\n    const [{user}, dispatch] = useStateValue();\r\n    \r\n    return (\r\n        <div className={`message ${messageName === user.displayName && \"messageRecieverMessage\"}`}>\r\n            <div className=\"messageAvatar\">\r\n                <Avatar src={messagePhoto} />\r\n            </div>\r\n            <div className={`message-info ${messageName === user.displayName && \"messageReciever\"}`}>\r\n                <p>{messageName}</p>\r\n                <h3>{messageText}</h3>\r\n                <img src={messageImage} className={`${messageImage ? \"openImage\" : \"noImage\"}`} alt=\"Doesn't exist\"/>\r\n                <small>{timeago.format(new Date(messageTimestamp?.toDate()).toLocaleString())}</small>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\Portfolio projects\\nowchat\\src\\firebase.js",[],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\Portfolio projects\\nowchat\\src\\Login.js",["58"],"import React from 'react';\r\nimport { auth, provider } from './firebase';\r\nimport \"./Login.css\";\r\nimport useStateValue from './StateProvider';\r\n\r\nconst Login = () => {\r\n    \r\n    const [{user}, dispatch] = useStateValue();\r\n\r\n    const login = () => {\r\n        auth.signInWithPopup(provider).then((result) => {\r\n            dispatch({\r\n                type: \"SET_USER\",\r\n                user: result.user,\r\n            });\r\n        }).catch((error) => alert(error.message));\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <img src=\"https://cdn.dribbble.com/users/31864/screenshots/3666062/free_logos_dribbble_ph.jpg?compress=1&resize=800x600\" alt=\"logo\"/>\r\n            <button onClick={login}>Sign In</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":11,"column":18,"nodeType":"65","messageId":"66","endLine":11,"endColumn":26},{"ruleId":"63","severity":1,"message":"64","line":14,"column":20,"nodeType":"65","messageId":"66","endLine":14,"endColumn":28},{"ruleId":"63","severity":1,"message":"67","line":6,"column":10,"nodeType":"65","messageId":"66","endLine":6,"endColumn":14},{"ruleId":"63","severity":1,"message":"64","line":10,"column":20,"nodeType":"65","messageId":"66","endLine":10,"endColumn":28},{"ruleId":"63","severity":1,"message":"68","line":8,"column":13,"nodeType":"65","messageId":"66","endLine":8,"endColumn":17},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'Room' is defined but never used.","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]